Problem Statement: Implementing the K-Means Clustering Algorithm
Objective:
The task is to implement the K-Means Clustering Algorithm to partition a set of data points into a specified number of clusters (K). The algorithm aims to group similar data points together based on distance metrics (usually Euclidean distance). The objective is to determine the optimal centroids for each cluster and assign data points to the nearest cluster.

Problem Description:
Given a data matrix 𝑋 X (of size 𝑛 × 𝑚 n×m, where 𝑛 n represents the number of data points and  𝑚 m represents the number of features), the goal is to:
Specify the number of clusters (K) for grouping the data.
Use K-Means clustering to divide the dataset into K clusters, such that the data points within each cluster are as similar as possible.
Visualize the results by plotting the data points and their respective cluster centers.

Algorithm Steps:
Step 1: Input Data 𝑋
X: A dataset with 𝑛
n data points and 𝑚 m features (dimensions).
Step 2: Choose the Number of Clusters (K)

Select the number of clusters, K, either based on domain knowledge or using methods like the elbow method for determining the optimal K.
Step 3: Initialize Centroids

Randomly initialize K centroids within the data space.
Step 4: Cluster Assignment

For each data point, compute the Euclidean distance to each centroid and assign the data point to the closest centroid (based on the minimum distance).
Step 5: Update Centroids

Recalculate the centroids by computing the mean of all data points assigned to each cluster.
Step 6: Repeat

Repeat steps 4 and 5 until the centroids do not change significantly between iterations or until a maximum number of iterations is reached.
Step 7: Output

Return the final cluster labels (which data points belong to which cluster) and the centroids after convergence.
Step 8: Visualization (Optional)

If the data is 2D or 3D, visualize the data points, clusters, and centroids.
